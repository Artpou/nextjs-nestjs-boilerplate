/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/user/top": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["UserController_getTop"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/register": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["AuthController_register"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/spotify": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["AuthController_spotifyAuth"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/login": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["AuthController_login"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/refresh": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get?: never;
        put?: never;
        post: operations["AuthController_refreshToken"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/me": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["AuthController_me"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/auth/test": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["AuthController_test"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/search": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["SearchController_search"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/search/releases": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        get: operations["SearchController_getReleases"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        TrackDto: {
            items: {
                id: string;
                name: string;
                type: string;
                uri: string;
                artists: {
                    id: string;
                    name: string;
                    type: string;
                    uri: string;
                    external_urls: {
                        /** Format: uri */
                        spotify: string;
                    };
                    followers?: {
                        total: number;
                    };
                    genres?: string[];
                    images?: {
                        /** Format: uri */
                        url: string;
                        height: number | null;
                        width: number | null;
                    }[];
                    popularity?: number;
                }[];
                album: {
                    id: string;
                    name: string;
                    type: string;
                    uri: string;
                    album_type: string;
                    artists: {
                        id: string;
                        name: string;
                        type: string;
                        uri: string;
                        external_urls: {
                            /** Format: uri */
                            spotify: string;
                        };
                        followers?: {
                            total: number;
                        };
                        genres?: string[];
                        images?: {
                            /** Format: uri */
                            url: string;
                            height: number | null;
                            width: number | null;
                        }[];
                        popularity?: number;
                    }[];
                    external_urls: {
                        /** Format: uri */
                        spotify: string;
                    };
                    images: {
                        /** Format: uri */
                        url: string;
                        height: number | null;
                        width: number | null;
                    }[];
                    release_date: string;
                    total_tracks: number;
                };
                duration_ms: number;
                explicit: boolean;
                external_urls: {
                    /** Format: uri */
                    spotify: string;
                };
                preview_url: string | null;
                popularity?: number;
            }[];
            total: number;
            limit: number;
            offset: number;
            next: string | null;
            previous: string | null;
        };
        RegisterDto: {
            /** Format: email */
            email: string;
            password: string;
        };
        TokenResponse: {
            access_token: string;
            refresh_token: string;
            expires_in: number;
            /** Format: email */
            email: string;
            provider?: string;
        };
        SpotifyAuthDto: {
            /** Format: email */
            email: string;
            id: string;
            access_token: string;
            refresh_token: string;
        };
        LoginDto: {
            /** Format: email */
            email: string;
            password: string;
        };
        RefreshDto: {
            refresh: string;
        };
        SearchResponse: {
            tracks?: {
                items: {
                    id: string;
                    name: string;
                    type: string;
                    uri: string;
                    artists: {
                        id: string;
                        name: string;
                        type: string;
                        uri: string;
                        external_urls: {
                            /** Format: uri */
                            spotify: string;
                        };
                        followers?: {
                            total: number;
                        };
                        genres?: string[];
                        images?: {
                            /** Format: uri */
                            url: string;
                            height: number | null;
                            width: number | null;
                        }[];
                        popularity?: number;
                    }[];
                    album: {
                        id: string;
                        name: string;
                        type: string;
                        uri: string;
                        album_type: string;
                        artists: {
                            id: string;
                            name: string;
                            type: string;
                            uri: string;
                            external_urls: {
                                /** Format: uri */
                                spotify: string;
                            };
                            followers?: {
                                total: number;
                            };
                            genres?: string[];
                            images?: {
                                /** Format: uri */
                                url: string;
                                height: number | null;
                                width: number | null;
                            }[];
                            popularity?: number;
                        }[];
                        external_urls: {
                            /** Format: uri */
                            spotify: string;
                        };
                        images: {
                            /** Format: uri */
                            url: string;
                            height: number | null;
                            width: number | null;
                        }[];
                        release_date: string;
                        total_tracks: number;
                    };
                    duration_ms: number;
                    explicit: boolean;
                    external_urls: {
                        /** Format: uri */
                        spotify: string;
                    };
                    preview_url: string | null;
                    popularity?: number;
                }[];
                total: number;
                limit: number;
                offset: number;
                next: string | null;
                previous: string | null;
            };
            artists?: {
                items: {
                    id: string;
                    name: string;
                    type: string;
                    uri: string;
                    external_urls: {
                        /** Format: uri */
                        spotify: string;
                    };
                    followers?: {
                        total: number;
                    };
                    genres?: string[];
                    images?: {
                        /** Format: uri */
                        url: string;
                        height: number | null;
                        width: number | null;
                    }[];
                    popularity?: number;
                }[];
                total: number;
                limit: number;
                offset: number;
                next: string | null;
                previous: string | null;
            };
            albums?: {
                items: {
                    id: string;
                    name: string;
                    type: string;
                    uri: string;
                    album_type: string;
                    artists: {
                        id: string;
                        name: string;
                        type: string;
                        uri: string;
                        external_urls: {
                            /** Format: uri */
                            spotify: string;
                        };
                        followers?: {
                            total: number;
                        };
                        genres?: string[];
                        images?: {
                            /** Format: uri */
                            url: string;
                            height: number | null;
                            width: number | null;
                        }[];
                        popularity?: number;
                    }[];
                    external_urls: {
                        /** Format: uri */
                        spotify: string;
                    };
                    images: {
                        /** Format: uri */
                        url: string;
                        height: number | null;
                        width: number | null;
                    }[];
                    release_date: string;
                    total_tracks: number;
                }[];
                total: number;
                limit: number;
                offset: number;
                next: string | null;
                previous: string | null;
            };
        };
        NewReleasesDto: {
            albums: {
                items: {
                    id: string;
                    name: string;
                    type: string;
                    uri: string;
                    album_type: string;
                    artists: {
                        id: string;
                        name: string;
                        type: string;
                        uri: string;
                        external_urls: {
                            /** Format: uri */
                            spotify: string;
                        };
                        followers?: {
                            total: number;
                        };
                        genres?: string[];
                        images?: {
                            /** Format: uri */
                            url: string;
                            height: number | null;
                            width: number | null;
                        }[];
                        popularity?: number;
                    }[];
                    external_urls: {
                        /** Format: uri */
                        spotify: string;
                    };
                    images: {
                        /** Format: uri */
                        url: string;
                        height: number | null;
                        width: number | null;
                    }[];
                    release_date: string;
                    total_tracks: number;
                }[];
                total: number;
                limit: number;
                offset: number;
                next: string | null;
                previous: string | null;
            };
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    UserController_getTop: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TrackDto"];
                };
            };
        };
    };
    AuthController_register: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RegisterDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenResponse"];
                };
            };
        };
    };
    AuthController_spotifyAuth: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["SpotifyAuthDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenResponse"];
                };
            };
        };
    };
    AuthController_login: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["LoginDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenResponse"];
                };
            };
        };
    };
    AuthController_refreshToken: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": components["schemas"]["RefreshDto"];
            };
        };
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["TokenResponse"];
                };
            };
        };
    };
    AuthController_me: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    AuthController_test: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content?: never;
            };
        };
    };
    SearchController_search: {
        parameters: {
            query: {
                search: string;
                type: string;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["SearchResponse"];
                };
            };
        };
    };
    SearchController_getReleases: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["NewReleasesDto"];
                };
            };
        };
    };
}
